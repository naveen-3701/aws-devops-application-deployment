#!/bin/bash

# AWS EC2 Setup Script
# This script provides instructions for setting up AWS EC2 instance for deployment

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_status "AWS EC2 Setup Instructions for DevOps Application Deployment"
echo ""
print_status "=== EC2 INSTANCE SETUP ==="
echo ""
print_status "1. Launch EC2 Instance:"
print_status "   - Instance Type: t2.micro (Free Tier eligible)"
print_status "   - AMI: Amazon Linux 2 or Ubuntu 20.04 LTS"
print_status "   - Storage: 8 GB (default)"
print_status "   - Key Pair: Create new or use existing"
echo ""
print_status "2. Security Group Configuration:"
print_status "   - HTTP (Port 80): 0.0.0.0/0 (Anyone with correct IP)"
print_status "   - SSH (Port 22): Your specific IP address only"
print_status "   - HTTPS (Port 443): 0.0.0.0/0 (optional)"
echo ""
print_status "3. Instance Configuration:"
print_status "   - Enable detailed monitoring"
print_status "   - Assign public IP"
print_status "   - Configure IAM role (optional)"
echo ""
print_status "=== SECURITY GROUP RULES ==="
echo ""
print_status "Inbound Rules:"
print_status "  - Type: HTTP, Protocol: TCP, Port: 80, Source: 0.0.0.0/0"
print_status "  - Type: SSH, Protocol: TCP, Port: 22, Source: YOUR_IP/32"
print_status "  - Type: HTTPS, Protocol: TCP, Port: 443, Source: 0.0.0.0/0 (optional)"
echo ""
print_status "Outbound Rules:"
print_status "  - Type: All Traffic, Protocol: All, Port: All, Destination: 0.0.0.0/0"
echo ""
print_status "=== INSTANCE PREPARATION ==="
echo ""
print_status "1. Connect to your EC2 instance:"
print_status "   ssh -i your-key.pem ec2-user@your-ec2-public-ip"
echo ""
print_status "2. Update the system:"
print_status "   sudo yum update -y  # For Amazon Linux"
print_status "   sudo apt update && sudo apt upgrade -y  # For Ubuntu"
echo ""
print_status "3. Install Docker:"
print_status "   # Amazon Linux:"
print_status "   sudo yum install -y docker"
print_status "   sudo systemctl start docker"
print_status "   sudo systemctl enable docker"
print_status "   sudo usermod -a -G docker ec2-user"
echo ""
print_status "   # Ubuntu:"
print_status "   sudo apt install -y docker.io"
print_status "   sudo systemctl start docker"
print_status "   sudo systemctl enable docker"
print_status "   sudo usermod -a -G docker ubuntu"
echo ""
print_status "4. Install additional tools:"
print_status "   sudo yum install -y curl wget git  # Amazon Linux"
print_status "   sudo apt install -y curl wget git  # Ubuntu"
echo ""
print_status "5. Logout and login again to apply docker group changes"
echo ""
print_status "=== DEPLOYMENT TEST ==="
echo ""
print_status "1. Test Docker installation:"
print_status "   docker --version"
print_status "   docker run hello-world"
echo ""
print_status "2. Test deployment script:"
print_status "   # From your local machine:"
print_status "   ./deploy.sh dev YOUR_EC2_IP ~/path/to/your-key.pem"
echo ""
print_status "3. Verify application:"
print_status "   curl http://YOUR_EC2_IP"
print_status "   curl http://YOUR_EC2_IP/health"
echo ""
print_status "=== MONITORING SETUP ==="
echo ""
print_status "1. Install monitoring tools:"
print_status "   # Install htop for system monitoring"
print_status "   sudo yum install -y htop  # Amazon Linux"
print_status "   sudo apt install -y htop  # Ubuntu"
echo ""
print_status "2. Set up log monitoring:"
print_status "   # Docker logs"
print_status "   docker logs devops-application"
print_status "   docker logs -f devops-application  # Follow logs"
echo ""
print_status "3. System monitoring:"
print_status "   htop  # System resource usage"
print_status "   df -h  # Disk usage"
print_status "   free -h  # Memory usage"
echo ""
print_status "=== AUTOMATED DEPLOYMENT ==="
echo ""
print_status "The Jenkins pipeline will automatically:"
print_status "  - Build Docker images"
print_status "  - Push to Docker Hub"
print_status "  - Deploy to this EC2 instance"
print_status "  - Perform health checks"
echo ""
print_status "=== TROUBLESHOOTING ==="
echo ""
print_status "Common issues and solutions:"
print_status "1. Cannot connect via SSH:"
print_status "   - Check security group allows your IP"
print_status "   - Verify key file permissions: chmod 400 your-key.pem"
print_status "   - Ensure instance is running"
echo ""
print_status "2. Application not accessible:"
print_status "   - Check security group allows HTTP (port 80)"
print_status "   - Verify Docker container is running: docker ps"
print_status "   - Check container logs: docker logs devops-application"
echo ""
print_status "3. Docker permission issues:"
print_status "   - Add user to docker group: sudo usermod -a -G docker \$USER"
print_status "   - Logout and login again"
print_status "   - Or use sudo with docker commands"
echo ""
print_success "AWS EC2 setup instructions completed!"
print_status "Next: Set up monitoring system and create documentation"
